GraphModule(
  (wte): Embedding(50257, 768)
  (wpe): Embedding(1024, 768)
  (drop): Dropout(p=0.1, inplace=False)
  (h): Module(
    (0): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (1): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (2): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (3): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (4): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (5): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (6): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (7): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (8): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (9): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (10): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
    (11): Module(
      (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (attn): Module(
        (c_attn): Module()
        (attn_dropout): Dropout(p=0.1, inplace=False)
        (c_proj): Module()
        (resid_dropout): Dropout(p=0.1, inplace=False)
      )
      (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (mlp): Module(
        (c_fc): Module()
        (c_proj): Module()
        (dropout): Dropout(p=0.1, inplace=False)
      )
    )
  )
  (ln_f): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
)



def forward(self, input_ids : torch.Tensor):
    size = input_ids.size()
    getitem = size[-1]
    view = input_ids.view(-1, getitem);  input_ids = getitem = None
    size_1 = view.size()
    getitem_1 = size_1[0];  size_1 = None
    getitem_2 = size[-1]
    add = getitem_2 + 0;  getitem_2 = None
    getattr_1 = view.device
    arange = torch.arange(0, add, dtype = torch.int64, device = getattr_1);  add = getattr_1 = None
    unsqueeze = arange.unsqueeze(0);  arange = None
    getitem_3 = size[-1]
    view_1 = unsqueeze.view(-1, getitem_3);  unsqueeze = getitem_3 = None
    wte = self.wte(view);  view = None
    wpe = self.wpe(view_1);  view_1 = None
    add_1 = wte + wpe;  wte = wpe = None
    drop = self.drop(add_1);  add_1 = None
    size_2 = drop.size(-1)
    add_2 = size + (size_2,);  size = size_2 = None
    h_0_ln_1 = getattr(self.h, "0").ln_1(drop)
    size_3 = h_0_ln_1.size()
    getitem_4 = size_3[slice(None, -1, None)];  size_3 = None
    add_3 = getitem_4 + (2304,);  getitem_4 = None
    h_0_attn_c_attn_bias = getattr(self.h, "0").attn.c_attn.bias
    size_4 = h_0_ln_1.size(-1)
    view_2 = h_0_ln_1.view(-1, size_4);  h_0_ln_1 = size_4 = None
    h_0_attn_c_attn_weight = getattr(self.h, "0").attn.c_attn.weight
    addmm = torch.addmm(h_0_attn_c_attn_bias, view_2, h_0_attn_c_attn_weight);  h_0_attn_c_attn_bias = view_2 = h_0_attn_c_attn_weight = None
    view_3 = addmm.view(add_3);  addmm = add_3 = None
    split = view_3.split(768, dim = 2);  view_3 = None
    getitem_5 = split[0]
    getitem_6 = split[1]
    getitem_7 = split[2];  split = None
    size_5 = getitem_5.size()
    getitem_8 = size_5[slice(None, -1, None)];  size_5 = None
    add_4 = getitem_8 + (12, 64);  getitem_8 = None
    view_4 = getitem_5.view(add_4);  getitem_5 = add_4 = None
    permute = view_4.permute(0, 2, 1, 3);  view_4 = None
    size_6 = getitem_6.size()
    getitem_9 = size_6[slice(None, -1, None)];  size_6 = None
    add_5 = getitem_9 + (12, 64);  getitem_9 = None
    view_5 = getitem_6.view(add_5);  getitem_6 = add_5 = None
    permute_1 = view_5.permute(0, 2, 1, 3);  view_5 = None
    size_7 = getitem_7.size()
    getitem_10 = size_7[slice(None, -1, None)];  size_7 = None
    add_6 = getitem_10 + (12, 64);  getitem_10 = None
    view_6 = getitem_7.view(add_6);  getitem_7 = add_6 = None
    permute_2 = view_6.permute(0, 2, 1, 3);  view_6 = None
    transpose = permute_1.transpose(-1, -2)
    matmul = torch.matmul(permute, transpose);  transpose = None
    size_8 = permute_2.size(-1)
    pow_1 = size_8 ** 0.5;  size_8 = None
    getattr_2 = matmul.dtype
    getattr_3 = matmul.device
    full = torch.full([], pow_1, dtype = getattr_2, device = getattr_3);  pow_1 = getattr_2 = getattr_3 = None
    truediv = matmul / full;  matmul = full = None
    size_9 = permute.size(-2);  permute = None
    size_10 = permute_1.size(-2)
    h_0_attn_bias = getattr(self.h, "0").attn.bias
    sub = size_10 - size_9;  size_9 = None
    getitem_11 = h_0_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub, size_10, None), slice(None, size_10, None))];  h_0_attn_bias = sub = size_10 = None
    getattr_4 = truediv.dtype
    finfo = torch.finfo(getattr_4);  getattr_4 = None
    getattr_5 = finfo.min;  finfo = None
    getattr_6 = truediv.dtype
    full_1 = torch.full([], getattr_5, dtype = getattr_6);  getattr_5 = getattr_6 = None
    getattr_7 = truediv.device
    to = full_1.to(getattr_7);  full_1 = getattr_7 = None
    getattr_8 = truediv.dtype
    to_1 = truediv.to(getattr_8);  truediv = getattr_8 = None
    where = torch.where(getitem_11, to_1, to);  getitem_11 = to_1 = to = None
    softmax = torch.nn.functional.softmax(where, dim = -1, _stacklevel = 3, dtype = None);  where = None
    getattr_9 = permute_2.dtype
    type_1 = softmax.type(getattr_9);  softmax = getattr_9 = None
    h_0_attn_attn_dropout = getattr(self.h, "0").attn.attn_dropout(type_1);  type_1 = None
    matmul_1 = torch.matmul(h_0_attn_attn_dropout, permute_2);  h_0_attn_attn_dropout = None
    permute_3 = matmul_1.permute(0, 2, 1, 3);  matmul_1 = None
    contiguous = permute_3.contiguous();  permute_3 = None
    size_11 = contiguous.size()
    getitem_12 = size_11[slice(None, -2, None)];  size_11 = None
    add_7 = getitem_12 + (768,);  getitem_12 = None
    view_7 = contiguous.view(add_7);  contiguous = add_7 = None
    size_12 = view_7.size()
    getitem_13 = size_12[slice(None, -1, None)];  size_12 = None
    add_8 = getitem_13 + (768,);  getitem_13 = None
    h_0_attn_c_proj_bias = getattr(self.h, "0").attn.c_proj.bias
    size_13 = view_7.size(-1)
    view_8 = view_7.view(-1, size_13);  view_7 = size_13 = None
    h_0_attn_c_proj_weight = getattr(self.h, "0").attn.c_proj.weight
    addmm_1 = torch.addmm(h_0_attn_c_proj_bias, view_8, h_0_attn_c_proj_weight);  h_0_attn_c_proj_bias = view_8 = h_0_attn_c_proj_weight = None
    view_9 = addmm_1.view(add_8);  addmm_1 = add_8 = None
    h_0_attn_resid_dropout = getattr(self.h, "0").attn.resid_dropout(view_9);  view_9 = None
    add_9 = h_0_attn_resid_dropout + drop;  h_0_attn_resid_dropout = drop = None
    h_0_ln_2 = getattr(self.h, "0").ln_2(add_9)
    size_14 = h_0_ln_2.size()
    getitem_14 = size_14[slice(None, -1, None)];  size_14 = None
    add_10 = getitem_14 + (3072,);  getitem_14 = None
    h_0_mlp_c_fc_bias = getattr(self.h, "0").mlp.c_fc.bias
    size_15 = h_0_ln_2.size(-1)
    view_10 = h_0_ln_2.view(-1, size_15);  h_0_ln_2 = size_15 = None
    h_0_mlp_c_fc_weight = getattr(self.h, "0").mlp.c_fc.weight
    addmm_2 = torch.addmm(h_0_mlp_c_fc_bias, view_10, h_0_mlp_c_fc_weight);  h_0_mlp_c_fc_bias = view_10 = h_0_mlp_c_fc_weight = None
    view_11 = addmm_2.view(add_10);  addmm_2 = add_10 = None
    mul = 0.5 * view_11
    pow_2 = torch.pow(view_11, 3.0)
    mul_1 = 0.044715 * pow_2;  pow_2 = None
    add_11 = view_11 + mul_1;  view_11 = mul_1 = None
    mul_2 = 0.7978845608028654 * add_11;  add_11 = None
    tanh = torch.tanh(mul_2);  mul_2 = None
    add_12 = 1.0 + tanh;  tanh = None
    mul_3 = mul * add_12;  mul = add_12 = None
    size_16 = mul_3.size()
    getitem_15 = size_16[slice(None, -1, None)];  size_16 = None
    add_13 = getitem_15 + (768,);  getitem_15 = None
    h_0_mlp_c_proj_bias = getattr(self.h, "0").mlp.c_proj.bias
    size_17 = mul_3.size(-1)
    view_12 = mul_3.view(-1, size_17);  mul_3 = size_17 = None
    h_0_mlp_c_proj_weight = getattr(self.h, "0").mlp.c_proj.weight
    addmm_3 = torch.addmm(h_0_mlp_c_proj_bias, view_12, h_0_mlp_c_proj_weight);  h_0_mlp_c_proj_bias = view_12 = h_0_mlp_c_proj_weight = None
    view_13 = addmm_3.view(add_13);  addmm_3 = add_13 = None
    h_0_mlp_dropout = getattr(self.h, "0").mlp.dropout(view_13);  view_13 = None
    add_14 = add_9 + h_0_mlp_dropout;  add_9 = h_0_mlp_dropout = None
    h_1_ln_1 = getattr(self.h, "1").ln_1(add_14)
    size_18 = h_1_ln_1.size()
    getitem_16 = size_18[slice(None, -1, None)];  size_18 = None
    add_15 = getitem_16 + (2304,);  getitem_16 = None
    h_1_attn_c_attn_bias = getattr(self.h, "1").attn.c_attn.bias
    size_19 = h_1_ln_1.size(-1)
    view_14 = h_1_ln_1.view(-1, size_19);  h_1_ln_1 = size_19 = None
    h_1_attn_c_attn_weight = getattr(self.h, "1").attn.c_attn.weight
    addmm_4 = torch.addmm(h_1_attn_c_attn_bias, view_14, h_1_attn_c_attn_weight);  h_1_attn_c_attn_bias = view_14 = h_1_attn_c_attn_weight = None
    view_15 = addmm_4.view(add_15);  addmm_4 = add_15 = None
    split_1 = view_15.split(768, dim = 2);  view_15 = None
    getitem_17 = split_1[0]
    getitem_18 = split_1[1]
    getitem_19 = split_1[2];  split_1 = None
    size_20 = getitem_17.size()
    getitem_20 = size_20[slice(None, -1, None)];  size_20 = None
    add_16 = getitem_20 + (12, 64);  getitem_20 = None
    view_16 = getitem_17.view(add_16);  getitem_17 = add_16 = None
    permute_4 = view_16.permute(0, 2, 1, 3);  view_16 = None
    size_21 = getitem_18.size()
    getitem_21 = size_21[slice(None, -1, None)];  size_21 = None
    add_17 = getitem_21 + (12, 64);  getitem_21 = None
    view_17 = getitem_18.view(add_17);  getitem_18 = add_17 = None
    permute_5 = view_17.permute(0, 2, 1, 3);  view_17 = None
    size_22 = getitem_19.size()
    getitem_22 = size_22[slice(None, -1, None)];  size_22 = None
    add_18 = getitem_22 + (12, 64);  getitem_22 = None
    view_18 = getitem_19.view(add_18);  getitem_19 = add_18 = None
    permute_6 = view_18.permute(0, 2, 1, 3);  view_18 = None
    transpose_1 = permute_5.transpose(-1, -2)
    matmul_2 = torch.matmul(permute_4, transpose_1);  transpose_1 = None
    size_23 = permute_6.size(-1)
    pow_3 = size_23 ** 0.5;  size_23 = None
    getattr_10 = matmul_2.dtype
    getattr_11 = matmul_2.device
    full_2 = torch.full([], pow_3, dtype = getattr_10, device = getattr_11);  pow_3 = getattr_10 = getattr_11 = None
    truediv_1 = matmul_2 / full_2;  matmul_2 = full_2 = None
    size_24 = permute_4.size(-2);  permute_4 = None
    size_25 = permute_5.size(-2)
    h_1_attn_bias = getattr(self.h, "1").attn.bias
    sub_1 = size_25 - size_24;  size_24 = None
    getitem_23 = h_1_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_1, size_25, None), slice(None, size_25, None))];  h_1_attn_bias = sub_1 = size_25 = None
    getattr_12 = truediv_1.dtype
    finfo_1 = torch.finfo(getattr_12);  getattr_12 = None
    getattr_13 = finfo_1.min;  finfo_1 = None
    getattr_14 = truediv_1.dtype
    full_3 = torch.full([], getattr_13, dtype = getattr_14);  getattr_13 = getattr_14 = None
    getattr_15 = truediv_1.device
    to_2 = full_3.to(getattr_15);  full_3 = getattr_15 = None
    getattr_16 = truediv_1.dtype
    to_3 = truediv_1.to(getattr_16);  truediv_1 = getattr_16 = None
    where_1 = torch.where(getitem_23, to_3, to_2);  getitem_23 = to_3 = to_2 = None
    softmax_1 = torch.nn.functional.softmax(where_1, dim = -1, _stacklevel = 3, dtype = None);  where_1 = None
    getattr_17 = permute_6.dtype
    type_2 = softmax_1.type(getattr_17);  softmax_1 = getattr_17 = None
    h_1_attn_attn_dropout = getattr(self.h, "1").attn.attn_dropout(type_2);  type_2 = None
    matmul_3 = torch.matmul(h_1_attn_attn_dropout, permute_6);  h_1_attn_attn_dropout = None
    permute_7 = matmul_3.permute(0, 2, 1, 3);  matmul_3 = None
    contiguous_1 = permute_7.contiguous();  permute_7 = None
    size_26 = contiguous_1.size()
    getitem_24 = size_26[slice(None, -2, None)];  size_26 = None
    add_19 = getitem_24 + (768,);  getitem_24 = None
    view_19 = contiguous_1.view(add_19);  contiguous_1 = add_19 = None
    size_27 = view_19.size()
    getitem_25 = size_27[slice(None, -1, None)];  size_27 = None
    add_20 = getitem_25 + (768,);  getitem_25 = None
    h_1_attn_c_proj_bias = getattr(self.h, "1").attn.c_proj.bias
    size_28 = view_19.size(-1)
    view_20 = view_19.view(-1, size_28);  view_19 = size_28 = None
    h_1_attn_c_proj_weight = getattr(self.h, "1").attn.c_proj.weight
    addmm_5 = torch.addmm(h_1_attn_c_proj_bias, view_20, h_1_attn_c_proj_weight);  h_1_attn_c_proj_bias = view_20 = h_1_attn_c_proj_weight = None
    view_21 = addmm_5.view(add_20);  addmm_5 = add_20 = None
    h_1_attn_resid_dropout = getattr(self.h, "1").attn.resid_dropout(view_21);  view_21 = None
    add_21 = h_1_attn_resid_dropout + add_14;  h_1_attn_resid_dropout = add_14 = None
    h_1_ln_2 = getattr(self.h, "1").ln_2(add_21)
    size_29 = h_1_ln_2.size()
    getitem_26 = size_29[slice(None, -1, None)];  size_29 = None
    add_22 = getitem_26 + (3072,);  getitem_26 = None
    h_1_mlp_c_fc_bias = getattr(self.h, "1").mlp.c_fc.bias
    size_30 = h_1_ln_2.size(-1)
    view_22 = h_1_ln_2.view(-1, size_30);  h_1_ln_2 = size_30 = None
    h_1_mlp_c_fc_weight = getattr(self.h, "1").mlp.c_fc.weight
    addmm_6 = torch.addmm(h_1_mlp_c_fc_bias, view_22, h_1_mlp_c_fc_weight);  h_1_mlp_c_fc_bias = view_22 = h_1_mlp_c_fc_weight = None
    view_23 = addmm_6.view(add_22);  addmm_6 = add_22 = None
    mul_4 = 0.5 * view_23
    pow_4 = torch.pow(view_23, 3.0)
    mul_5 = 0.044715 * pow_4;  pow_4 = None
    add_23 = view_23 + mul_5;  view_23 = mul_5 = None
    mul_6 = 0.7978845608028654 * add_23;  add_23 = None
    tanh_1 = torch.tanh(mul_6);  mul_6 = None
    add_24 = 1.0 + tanh_1;  tanh_1 = None
    mul_7 = mul_4 * add_24;  mul_4 = add_24 = None
    size_31 = mul_7.size()
    getitem_27 = size_31[slice(None, -1, None)];  size_31 = None
    add_25 = getitem_27 + (768,);  getitem_27 = None
    h_1_mlp_c_proj_bias = getattr(self.h, "1").mlp.c_proj.bias
    size_32 = mul_7.size(-1)
    view_24 = mul_7.view(-1, size_32);  mul_7 = size_32 = None
    h_1_mlp_c_proj_weight = getattr(self.h, "1").mlp.c_proj.weight
    addmm_7 = torch.addmm(h_1_mlp_c_proj_bias, view_24, h_1_mlp_c_proj_weight);  h_1_mlp_c_proj_bias = view_24 = h_1_mlp_c_proj_weight = None
    view_25 = addmm_7.view(add_25);  addmm_7 = add_25 = None
    h_1_mlp_dropout = getattr(self.h, "1").mlp.dropout(view_25);  view_25 = None
    add_26 = add_21 + h_1_mlp_dropout;  add_21 = h_1_mlp_dropout = None
    h_2_ln_1 = getattr(self.h, "2").ln_1(add_26)
    size_33 = h_2_ln_1.size()
    getitem_28 = size_33[slice(None, -1, None)];  size_33 = None
    add_27 = getitem_28 + (2304,);  getitem_28 = None
    h_2_attn_c_attn_bias = getattr(self.h, "2").attn.c_attn.bias
    size_34 = h_2_ln_1.size(-1)
    view_26 = h_2_ln_1.view(-1, size_34);  h_2_ln_1 = size_34 = None
    h_2_attn_c_attn_weight = getattr(self.h, "2").attn.c_attn.weight
    addmm_8 = torch.addmm(h_2_attn_c_attn_bias, view_26, h_2_attn_c_attn_weight);  h_2_attn_c_attn_bias = view_26 = h_2_attn_c_attn_weight = None
    view_27 = addmm_8.view(add_27);  addmm_8 = add_27 = None
    split_2 = view_27.split(768, dim = 2);  view_27 = None
    getitem_29 = split_2[0]
    getitem_30 = split_2[1]
    getitem_31 = split_2[2];  split_2 = None
    size_35 = getitem_29.size()
    getitem_32 = size_35[slice(None, -1, None)];  size_35 = None
    add_28 = getitem_32 + (12, 64);  getitem_32 = None
    view_28 = getitem_29.view(add_28);  getitem_29 = add_28 = None
    permute_8 = view_28.permute(0, 2, 1, 3);  view_28 = None
    size_36 = getitem_30.size()
    getitem_33 = size_36[slice(None, -1, None)];  size_36 = None
    add_29 = getitem_33 + (12, 64);  getitem_33 = None
    view_29 = getitem_30.view(add_29);  getitem_30 = add_29 = None
    permute_9 = view_29.permute(0, 2, 1, 3);  view_29 = None
    size_37 = getitem_31.size()
    getitem_34 = size_37[slice(None, -1, None)];  size_37 = None
    add_30 = getitem_34 + (12, 64);  getitem_34 = None
    view_30 = getitem_31.view(add_30);  getitem_31 = add_30 = None
    permute_10 = view_30.permute(0, 2, 1, 3);  view_30 = None
    transpose_2 = permute_9.transpose(-1, -2)
    matmul_4 = torch.matmul(permute_8, transpose_2);  transpose_2 = None
    size_38 = permute_10.size(-1)
    pow_5 = size_38 ** 0.5;  size_38 = None
    getattr_18 = matmul_4.dtype
    getattr_19 = matmul_4.device
    full_4 = torch.full([], pow_5, dtype = getattr_18, device = getattr_19);  pow_5 = getattr_18 = getattr_19 = None
    truediv_2 = matmul_4 / full_4;  matmul_4 = full_4 = None
    size_39 = permute_8.size(-2);  permute_8 = None
    size_40 = permute_9.size(-2)
    h_2_attn_bias = getattr(self.h, "2").attn.bias
    sub_2 = size_40 - size_39;  size_39 = None
    getitem_35 = h_2_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_2, size_40, None), slice(None, size_40, None))];  h_2_attn_bias = sub_2 = size_40 = None
    getattr_20 = truediv_2.dtype
    finfo_2 = torch.finfo(getattr_20);  getattr_20 = None
    getattr_21 = finfo_2.min;  finfo_2 = None
    getattr_22 = truediv_2.dtype
    full_5 = torch.full([], getattr_21, dtype = getattr_22);  getattr_21 = getattr_22 = None
    getattr_23 = truediv_2.device
    to_4 = full_5.to(getattr_23);  full_5 = getattr_23 = None
    getattr_24 = truediv_2.dtype
    to_5 = truediv_2.to(getattr_24);  truediv_2 = getattr_24 = None
    where_2 = torch.where(getitem_35, to_5, to_4);  getitem_35 = to_5 = to_4 = None
    softmax_2 = torch.nn.functional.softmax(where_2, dim = -1, _stacklevel = 3, dtype = None);  where_2 = None
    getattr_25 = permute_10.dtype
    type_3 = softmax_2.type(getattr_25);  softmax_2 = getattr_25 = None
    h_2_attn_attn_dropout = getattr(self.h, "2").attn.attn_dropout(type_3);  type_3 = None
    matmul_5 = torch.matmul(h_2_attn_attn_dropout, permute_10);  h_2_attn_attn_dropout = None
    permute_11 = matmul_5.permute(0, 2, 1, 3);  matmul_5 = None
    contiguous_2 = permute_11.contiguous();  permute_11 = None
    size_41 = contiguous_2.size()
    getitem_36 = size_41[slice(None, -2, None)];  size_41 = None
    add_31 = getitem_36 + (768,);  getitem_36 = None
    view_31 = contiguous_2.view(add_31);  contiguous_2 = add_31 = None
    size_42 = view_31.size()
    getitem_37 = size_42[slice(None, -1, None)];  size_42 = None
    add_32 = getitem_37 + (768,);  getitem_37 = None
    h_2_attn_c_proj_bias = getattr(self.h, "2").attn.c_proj.bias
    size_43 = view_31.size(-1)
    view_32 = view_31.view(-1, size_43);  view_31 = size_43 = None
    h_2_attn_c_proj_weight = getattr(self.h, "2").attn.c_proj.weight
    addmm_9 = torch.addmm(h_2_attn_c_proj_bias, view_32, h_2_attn_c_proj_weight);  h_2_attn_c_proj_bias = view_32 = h_2_attn_c_proj_weight = None
    view_33 = addmm_9.view(add_32);  addmm_9 = add_32 = None
    h_2_attn_resid_dropout = getattr(self.h, "2").attn.resid_dropout(view_33);  view_33 = None
    add_33 = h_2_attn_resid_dropout + add_26;  h_2_attn_resid_dropout = add_26 = None
    h_2_ln_2 = getattr(self.h, "2").ln_2(add_33)
    size_44 = h_2_ln_2.size()
    getitem_38 = size_44[slice(None, -1, None)];  size_44 = None
    add_34 = getitem_38 + (3072,);  getitem_38 = None
    h_2_mlp_c_fc_bias = getattr(self.h, "2").mlp.c_fc.bias
    size_45 = h_2_ln_2.size(-1)
    view_34 = h_2_ln_2.view(-1, size_45);  h_2_ln_2 = size_45 = None
    h_2_mlp_c_fc_weight = getattr(self.h, "2").mlp.c_fc.weight
    addmm_10 = torch.addmm(h_2_mlp_c_fc_bias, view_34, h_2_mlp_c_fc_weight);  h_2_mlp_c_fc_bias = view_34 = h_2_mlp_c_fc_weight = None
    view_35 = addmm_10.view(add_34);  addmm_10 = add_34 = None
    mul_8 = 0.5 * view_35
    pow_6 = torch.pow(view_35, 3.0)
    mul_9 = 0.044715 * pow_6;  pow_6 = None
    add_35 = view_35 + mul_9;  view_35 = mul_9 = None
    mul_10 = 0.7978845608028654 * add_35;  add_35 = None
    tanh_2 = torch.tanh(mul_10);  mul_10 = None
    add_36 = 1.0 + tanh_2;  tanh_2 = None
    mul_11 = mul_8 * add_36;  mul_8 = add_36 = None
    size_46 = mul_11.size()
    getitem_39 = size_46[slice(None, -1, None)];  size_46 = None
    add_37 = getitem_39 + (768,);  getitem_39 = None
    h_2_mlp_c_proj_bias = getattr(self.h, "2").mlp.c_proj.bias
    size_47 = mul_11.size(-1)
    view_36 = mul_11.view(-1, size_47);  mul_11 = size_47 = None
    h_2_mlp_c_proj_weight = getattr(self.h, "2").mlp.c_proj.weight
    addmm_11 = torch.addmm(h_2_mlp_c_proj_bias, view_36, h_2_mlp_c_proj_weight);  h_2_mlp_c_proj_bias = view_36 = h_2_mlp_c_proj_weight = None
    view_37 = addmm_11.view(add_37);  addmm_11 = add_37 = None
    h_2_mlp_dropout = getattr(self.h, "2").mlp.dropout(view_37);  view_37 = None
    add_38 = add_33 + h_2_mlp_dropout;  add_33 = h_2_mlp_dropout = None
    h_3_ln_1 = getattr(self.h, "3").ln_1(add_38)
    size_48 = h_3_ln_1.size()
    getitem_40 = size_48[slice(None, -1, None)];  size_48 = None
    add_39 = getitem_40 + (2304,);  getitem_40 = None
    h_3_attn_c_attn_bias = getattr(self.h, "3").attn.c_attn.bias
    size_49 = h_3_ln_1.size(-1)
    view_38 = h_3_ln_1.view(-1, size_49);  h_3_ln_1 = size_49 = None
    h_3_attn_c_attn_weight = getattr(self.h, "3").attn.c_attn.weight
    addmm_12 = torch.addmm(h_3_attn_c_attn_bias, view_38, h_3_attn_c_attn_weight);  h_3_attn_c_attn_bias = view_38 = h_3_attn_c_attn_weight = None
    view_39 = addmm_12.view(add_39);  addmm_12 = add_39 = None
    split_3 = view_39.split(768, dim = 2);  view_39 = None
    getitem_41 = split_3[0]
    getitem_42 = split_3[1]
    getitem_43 = split_3[2];  split_3 = None
    size_50 = getitem_41.size()
    getitem_44 = size_50[slice(None, -1, None)];  size_50 = None
    add_40 = getitem_44 + (12, 64);  getitem_44 = None
    view_40 = getitem_41.view(add_40);  getitem_41 = add_40 = None
    permute_12 = view_40.permute(0, 2, 1, 3);  view_40 = None
    size_51 = getitem_42.size()
    getitem_45 = size_51[slice(None, -1, None)];  size_51 = None
    add_41 = getitem_45 + (12, 64);  getitem_45 = None
    view_41 = getitem_42.view(add_41);  getitem_42 = add_41 = None
    permute_13 = view_41.permute(0, 2, 1, 3);  view_41 = None
    size_52 = getitem_43.size()
    getitem_46 = size_52[slice(None, -1, None)];  size_52 = None
    add_42 = getitem_46 + (12, 64);  getitem_46 = None
    view_42 = getitem_43.view(add_42);  getitem_43 = add_42 = None
    permute_14 = view_42.permute(0, 2, 1, 3);  view_42 = None
    transpose_3 = permute_13.transpose(-1, -2)
    matmul_6 = torch.matmul(permute_12, transpose_3);  transpose_3 = None
    size_53 = permute_14.size(-1)
    pow_7 = size_53 ** 0.5;  size_53 = None
    getattr_26 = matmul_6.dtype
    getattr_27 = matmul_6.device
    full_6 = torch.full([], pow_7, dtype = getattr_26, device = getattr_27);  pow_7 = getattr_26 = getattr_27 = None
    truediv_3 = matmul_6 / full_6;  matmul_6 = full_6 = None
    size_54 = permute_12.size(-2);  permute_12 = None
    size_55 = permute_13.size(-2)
    h_3_attn_bias = getattr(self.h, "3").attn.bias
    sub_3 = size_55 - size_54;  size_54 = None
    getitem_47 = h_3_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_3, size_55, None), slice(None, size_55, None))];  h_3_attn_bias = sub_3 = size_55 = None
    getattr_28 = truediv_3.dtype
    finfo_3 = torch.finfo(getattr_28);  getattr_28 = None
    getattr_29 = finfo_3.min;  finfo_3 = None
    getattr_30 = truediv_3.dtype
    full_7 = torch.full([], getattr_29, dtype = getattr_30);  getattr_29 = getattr_30 = None
    getattr_31 = truediv_3.device
    to_6 = full_7.to(getattr_31);  full_7 = getattr_31 = None
    getattr_32 = truediv_3.dtype
    to_7 = truediv_3.to(getattr_32);  truediv_3 = getattr_32 = None
    where_3 = torch.where(getitem_47, to_7, to_6);  getitem_47 = to_7 = to_6 = None
    softmax_3 = torch.nn.functional.softmax(where_3, dim = -1, _stacklevel = 3, dtype = None);  where_3 = None
    getattr_33 = permute_14.dtype
    type_4 = softmax_3.type(getattr_33);  softmax_3 = getattr_33 = None
    h_3_attn_attn_dropout = getattr(self.h, "3").attn.attn_dropout(type_4);  type_4 = None
    matmul_7 = torch.matmul(h_3_attn_attn_dropout, permute_14);  h_3_attn_attn_dropout = None
    permute_15 = matmul_7.permute(0, 2, 1, 3);  matmul_7 = None
    contiguous_3 = permute_15.contiguous();  permute_15 = None
    size_56 = contiguous_3.size()
    getitem_48 = size_56[slice(None, -2, None)];  size_56 = None
    add_43 = getitem_48 + (768,);  getitem_48 = None
    view_43 = contiguous_3.view(add_43);  contiguous_3 = add_43 = None
    size_57 = view_43.size()
    getitem_49 = size_57[slice(None, -1, None)];  size_57 = None
    add_44 = getitem_49 + (768,);  getitem_49 = None
    h_3_attn_c_proj_bias = getattr(self.h, "3").attn.c_proj.bias
    size_58 = view_43.size(-1)
    view_44 = view_43.view(-1, size_58);  view_43 = size_58 = None
    h_3_attn_c_proj_weight = getattr(self.h, "3").attn.c_proj.weight
    addmm_13 = torch.addmm(h_3_attn_c_proj_bias, view_44, h_3_attn_c_proj_weight);  h_3_attn_c_proj_bias = view_44 = h_3_attn_c_proj_weight = None
    view_45 = addmm_13.view(add_44);  addmm_13 = add_44 = None
    h_3_attn_resid_dropout = getattr(self.h, "3").attn.resid_dropout(view_45);  view_45 = None
    add_45 = h_3_attn_resid_dropout + add_38;  h_3_attn_resid_dropout = add_38 = None
    h_3_ln_2 = getattr(self.h, "3").ln_2(add_45)
    size_59 = h_3_ln_2.size()
    getitem_50 = size_59[slice(None, -1, None)];  size_59 = None
    add_46 = getitem_50 + (3072,);  getitem_50 = None
    h_3_mlp_c_fc_bias = getattr(self.h, "3").mlp.c_fc.bias
    size_60 = h_3_ln_2.size(-1)
    view_46 = h_3_ln_2.view(-1, size_60);  h_3_ln_2 = size_60 = None
    h_3_mlp_c_fc_weight = getattr(self.h, "3").mlp.c_fc.weight
    addmm_14 = torch.addmm(h_3_mlp_c_fc_bias, view_46, h_3_mlp_c_fc_weight);  h_3_mlp_c_fc_bias = view_46 = h_3_mlp_c_fc_weight = None
    view_47 = addmm_14.view(add_46);  addmm_14 = add_46 = None
    mul_12 = 0.5 * view_47
    pow_8 = torch.pow(view_47, 3.0)
    mul_13 = 0.044715 * pow_8;  pow_8 = None
    add_47 = view_47 + mul_13;  view_47 = mul_13 = None
    mul_14 = 0.7978845608028654 * add_47;  add_47 = None
    tanh_3 = torch.tanh(mul_14);  mul_14 = None
    add_48 = 1.0 + tanh_3;  tanh_3 = None
    mul_15 = mul_12 * add_48;  mul_12 = add_48 = None
    size_61 = mul_15.size()
    getitem_51 = size_61[slice(None, -1, None)];  size_61 = None
    add_49 = getitem_51 + (768,);  getitem_51 = None
    h_3_mlp_c_proj_bias = getattr(self.h, "3").mlp.c_proj.bias
    size_62 = mul_15.size(-1)
    view_48 = mul_15.view(-1, size_62);  mul_15 = size_62 = None
    h_3_mlp_c_proj_weight = getattr(self.h, "3").mlp.c_proj.weight
    addmm_15 = torch.addmm(h_3_mlp_c_proj_bias, view_48, h_3_mlp_c_proj_weight);  h_3_mlp_c_proj_bias = view_48 = h_3_mlp_c_proj_weight = None
    view_49 = addmm_15.view(add_49);  addmm_15 = add_49 = None
    h_3_mlp_dropout = getattr(self.h, "3").mlp.dropout(view_49);  view_49 = None
    add_50 = add_45 + h_3_mlp_dropout;  add_45 = h_3_mlp_dropout = None
    h_4_ln_1 = getattr(self.h, "4").ln_1(add_50)
    size_63 = h_4_ln_1.size()
    getitem_52 = size_63[slice(None, -1, None)];  size_63 = None
    add_51 = getitem_52 + (2304,);  getitem_52 = None
    h_4_attn_c_attn_bias = getattr(self.h, "4").attn.c_attn.bias
    size_64 = h_4_ln_1.size(-1)
    view_50 = h_4_ln_1.view(-1, size_64);  h_4_ln_1 = size_64 = None
    h_4_attn_c_attn_weight = getattr(self.h, "4").attn.c_attn.weight
    addmm_16 = torch.addmm(h_4_attn_c_attn_bias, view_50, h_4_attn_c_attn_weight);  h_4_attn_c_attn_bias = view_50 = h_4_attn_c_attn_weight = None
    view_51 = addmm_16.view(add_51);  addmm_16 = add_51 = None
    split_4 = view_51.split(768, dim = 2);  view_51 = None
    getitem_53 = split_4[0]
    getitem_54 = split_4[1]
    getitem_55 = split_4[2];  split_4 = None
    size_65 = getitem_53.size()
    getitem_56 = size_65[slice(None, -1, None)];  size_65 = None
    add_52 = getitem_56 + (12, 64);  getitem_56 = None
    view_52 = getitem_53.view(add_52);  getitem_53 = add_52 = None
    permute_16 = view_52.permute(0, 2, 1, 3);  view_52 = None
    size_66 = getitem_54.size()
    getitem_57 = size_66[slice(None, -1, None)];  size_66 = None
    add_53 = getitem_57 + (12, 64);  getitem_57 = None
    view_53 = getitem_54.view(add_53);  getitem_54 = add_53 = None
    permute_17 = view_53.permute(0, 2, 1, 3);  view_53 = None
    size_67 = getitem_55.size()
    getitem_58 = size_67[slice(None, -1, None)];  size_67 = None
    add_54 = getitem_58 + (12, 64);  getitem_58 = None
    view_54 = getitem_55.view(add_54);  getitem_55 = add_54 = None
    permute_18 = view_54.permute(0, 2, 1, 3);  view_54 = None
    transpose_4 = permute_17.transpose(-1, -2)
    matmul_8 = torch.matmul(permute_16, transpose_4);  transpose_4 = None
    size_68 = permute_18.size(-1)
    pow_9 = size_68 ** 0.5;  size_68 = None
    getattr_34 = matmul_8.dtype
    getattr_35 = matmul_8.device
    full_8 = torch.full([], pow_9, dtype = getattr_34, device = getattr_35);  pow_9 = getattr_34 = getattr_35 = None
    truediv_4 = matmul_8 / full_8;  matmul_8 = full_8 = None
    size_69 = permute_16.size(-2);  permute_16 = None
    size_70 = permute_17.size(-2)
    h_4_attn_bias = getattr(self.h, "4").attn.bias
    sub_4 = size_70 - size_69;  size_69 = None
    getitem_59 = h_4_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_4, size_70, None), slice(None, size_70, None))];  h_4_attn_bias = sub_4 = size_70 = None
    getattr_36 = truediv_4.dtype
    finfo_4 = torch.finfo(getattr_36);  getattr_36 = None
    getattr_37 = finfo_4.min;  finfo_4 = None
    getattr_38 = truediv_4.dtype
    full_9 = torch.full([], getattr_37, dtype = getattr_38);  getattr_37 = getattr_38 = None
    getattr_39 = truediv_4.device
    to_8 = full_9.to(getattr_39);  full_9 = getattr_39 = None
    getattr_40 = truediv_4.dtype
    to_9 = truediv_4.to(getattr_40);  truediv_4 = getattr_40 = None
    where_4 = torch.where(getitem_59, to_9, to_8);  getitem_59 = to_9 = to_8 = None
    softmax_4 = torch.nn.functional.softmax(where_4, dim = -1, _stacklevel = 3, dtype = None);  where_4 = None
    getattr_41 = permute_18.dtype
    type_5 = softmax_4.type(getattr_41);  softmax_4 = getattr_41 = None
    h_4_attn_attn_dropout = getattr(self.h, "4").attn.attn_dropout(type_5);  type_5 = None
    matmul_9 = torch.matmul(h_4_attn_attn_dropout, permute_18);  h_4_attn_attn_dropout = None
    permute_19 = matmul_9.permute(0, 2, 1, 3);  matmul_9 = None
    contiguous_4 = permute_19.contiguous();  permute_19 = None
    size_71 = contiguous_4.size()
    getitem_60 = size_71[slice(None, -2, None)];  size_71 = None
    add_55 = getitem_60 + (768,);  getitem_60 = None
    view_55 = contiguous_4.view(add_55);  contiguous_4 = add_55 = None
    size_72 = view_55.size()
    getitem_61 = size_72[slice(None, -1, None)];  size_72 = None
    add_56 = getitem_61 + (768,);  getitem_61 = None
    h_4_attn_c_proj_bias = getattr(self.h, "4").attn.c_proj.bias
    size_73 = view_55.size(-1)
    view_56 = view_55.view(-1, size_73);  view_55 = size_73 = None
    h_4_attn_c_proj_weight = getattr(self.h, "4").attn.c_proj.weight
    addmm_17 = torch.addmm(h_4_attn_c_proj_bias, view_56, h_4_attn_c_proj_weight);  h_4_attn_c_proj_bias = view_56 = h_4_attn_c_proj_weight = None
    view_57 = addmm_17.view(add_56);  addmm_17 = add_56 = None
    h_4_attn_resid_dropout = getattr(self.h, "4").attn.resid_dropout(view_57);  view_57 = None
    add_57 = h_4_attn_resid_dropout + add_50;  h_4_attn_resid_dropout = add_50 = None
    h_4_ln_2 = getattr(self.h, "4").ln_2(add_57)
    size_74 = h_4_ln_2.size()
    getitem_62 = size_74[slice(None, -1, None)];  size_74 = None
    add_58 = getitem_62 + (3072,);  getitem_62 = None
    h_4_mlp_c_fc_bias = getattr(self.h, "4").mlp.c_fc.bias
    size_75 = h_4_ln_2.size(-1)
    view_58 = h_4_ln_2.view(-1, size_75);  h_4_ln_2 = size_75 = None
    h_4_mlp_c_fc_weight = getattr(self.h, "4").mlp.c_fc.weight
    addmm_18 = torch.addmm(h_4_mlp_c_fc_bias, view_58, h_4_mlp_c_fc_weight);  h_4_mlp_c_fc_bias = view_58 = h_4_mlp_c_fc_weight = None
    view_59 = addmm_18.view(add_58);  addmm_18 = add_58 = None
    mul_16 = 0.5 * view_59
    pow_10 = torch.pow(view_59, 3.0)
    mul_17 = 0.044715 * pow_10;  pow_10 = None
    add_59 = view_59 + mul_17;  view_59 = mul_17 = None
    mul_18 = 0.7978845608028654 * add_59;  add_59 = None
    tanh_4 = torch.tanh(mul_18);  mul_18 = None
    add_60 = 1.0 + tanh_4;  tanh_4 = None
    mul_19 = mul_16 * add_60;  mul_16 = add_60 = None
    size_76 = mul_19.size()
    getitem_63 = size_76[slice(None, -1, None)];  size_76 = None
    add_61 = getitem_63 + (768,);  getitem_63 = None
    h_4_mlp_c_proj_bias = getattr(self.h, "4").mlp.c_proj.bias
    size_77 = mul_19.size(-1)
    view_60 = mul_19.view(-1, size_77);  mul_19 = size_77 = None
    h_4_mlp_c_proj_weight = getattr(self.h, "4").mlp.c_proj.weight
    addmm_19 = torch.addmm(h_4_mlp_c_proj_bias, view_60, h_4_mlp_c_proj_weight);  h_4_mlp_c_proj_bias = view_60 = h_4_mlp_c_proj_weight = None
    view_61 = addmm_19.view(add_61);  addmm_19 = add_61 = None
    h_4_mlp_dropout = getattr(self.h, "4").mlp.dropout(view_61);  view_61 = None
    add_62 = add_57 + h_4_mlp_dropout;  add_57 = h_4_mlp_dropout = None
    h_5_ln_1 = getattr(self.h, "5").ln_1(add_62)
    size_78 = h_5_ln_1.size()
    getitem_64 = size_78[slice(None, -1, None)];  size_78 = None
    add_63 = getitem_64 + (2304,);  getitem_64 = None
    h_5_attn_c_attn_bias = getattr(self.h, "5").attn.c_attn.bias
    size_79 = h_5_ln_1.size(-1)
    view_62 = h_5_ln_1.view(-1, size_79);  h_5_ln_1 = size_79 = None
    h_5_attn_c_attn_weight = getattr(self.h, "5").attn.c_attn.weight
    addmm_20 = torch.addmm(h_5_attn_c_attn_bias, view_62, h_5_attn_c_attn_weight);  h_5_attn_c_attn_bias = view_62 = h_5_attn_c_attn_weight = None
    view_63 = addmm_20.view(add_63);  addmm_20 = add_63 = None
    split_5 = view_63.split(768, dim = 2);  view_63 = None
    getitem_65 = split_5[0]
    getitem_66 = split_5[1]
    getitem_67 = split_5[2];  split_5 = None
    size_80 = getitem_65.size()
    getitem_68 = size_80[slice(None, -1, None)];  size_80 = None
    add_64 = getitem_68 + (12, 64);  getitem_68 = None
    view_64 = getitem_65.view(add_64);  getitem_65 = add_64 = None
    permute_20 = view_64.permute(0, 2, 1, 3);  view_64 = None
    size_81 = getitem_66.size()
    getitem_69 = size_81[slice(None, -1, None)];  size_81 = None
    add_65 = getitem_69 + (12, 64);  getitem_69 = None
    view_65 = getitem_66.view(add_65);  getitem_66 = add_65 = None
    permute_21 = view_65.permute(0, 2, 1, 3);  view_65 = None
    size_82 = getitem_67.size()
    getitem_70 = size_82[slice(None, -1, None)];  size_82 = None
    add_66 = getitem_70 + (12, 64);  getitem_70 = None
    view_66 = getitem_67.view(add_66);  getitem_67 = add_66 = None
    permute_22 = view_66.permute(0, 2, 1, 3);  view_66 = None
    transpose_5 = permute_21.transpose(-1, -2)
    matmul_10 = torch.matmul(permute_20, transpose_5);  transpose_5 = None
    size_83 = permute_22.size(-1)
    pow_11 = size_83 ** 0.5;  size_83 = None
    getattr_42 = matmul_10.dtype
    getattr_43 = matmul_10.device
    full_10 = torch.full([], pow_11, dtype = getattr_42, device = getattr_43);  pow_11 = getattr_42 = getattr_43 = None
    truediv_5 = matmul_10 / full_10;  matmul_10 = full_10 = None
    size_84 = permute_20.size(-2);  permute_20 = None
    size_85 = permute_21.size(-2)
    h_5_attn_bias = getattr(self.h, "5").attn.bias
    sub_5 = size_85 - size_84;  size_84 = None
    getitem_71 = h_5_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_5, size_85, None), slice(None, size_85, None))];  h_5_attn_bias = sub_5 = size_85 = None
    getattr_44 = truediv_5.dtype
    finfo_5 = torch.finfo(getattr_44);  getattr_44 = None
    getattr_45 = finfo_5.min;  finfo_5 = None
    getattr_46 = truediv_5.dtype
    full_11 = torch.full([], getattr_45, dtype = getattr_46);  getattr_45 = getattr_46 = None
    getattr_47 = truediv_5.device
    to_10 = full_11.to(getattr_47);  full_11 = getattr_47 = None
    getattr_48 = truediv_5.dtype
    to_11 = truediv_5.to(getattr_48);  truediv_5 = getattr_48 = None
    where_5 = torch.where(getitem_71, to_11, to_10);  getitem_71 = to_11 = to_10 = None
    softmax_5 = torch.nn.functional.softmax(where_5, dim = -1, _stacklevel = 3, dtype = None);  where_5 = None
    getattr_49 = permute_22.dtype
    type_6 = softmax_5.type(getattr_49);  softmax_5 = getattr_49 = None
    h_5_attn_attn_dropout = getattr(self.h, "5").attn.attn_dropout(type_6);  type_6 = None
    matmul_11 = torch.matmul(h_5_attn_attn_dropout, permute_22);  h_5_attn_attn_dropout = None
    permute_23 = matmul_11.permute(0, 2, 1, 3);  matmul_11 = None
    contiguous_5 = permute_23.contiguous();  permute_23 = None
    size_86 = contiguous_5.size()
    getitem_72 = size_86[slice(None, -2, None)];  size_86 = None
    add_67 = getitem_72 + (768,);  getitem_72 = None
    view_67 = contiguous_5.view(add_67);  contiguous_5 = add_67 = None
    size_87 = view_67.size()
    getitem_73 = size_87[slice(None, -1, None)];  size_87 = None
    add_68 = getitem_73 + (768,);  getitem_73 = None
    h_5_attn_c_proj_bias = getattr(self.h, "5").attn.c_proj.bias
    size_88 = view_67.size(-1)
    view_68 = view_67.view(-1, size_88);  view_67 = size_88 = None
    h_5_attn_c_proj_weight = getattr(self.h, "5").attn.c_proj.weight
    addmm_21 = torch.addmm(h_5_attn_c_proj_bias, view_68, h_5_attn_c_proj_weight);  h_5_attn_c_proj_bias = view_68 = h_5_attn_c_proj_weight = None
    view_69 = addmm_21.view(add_68);  addmm_21 = add_68 = None
    h_5_attn_resid_dropout = getattr(self.h, "5").attn.resid_dropout(view_69);  view_69 = None
    add_69 = h_5_attn_resid_dropout + add_62;  h_5_attn_resid_dropout = add_62 = None
    h_5_ln_2 = getattr(self.h, "5").ln_2(add_69)
    size_89 = h_5_ln_2.size()
    getitem_74 = size_89[slice(None, -1, None)];  size_89 = None
    add_70 = getitem_74 + (3072,);  getitem_74 = None
    h_5_mlp_c_fc_bias = getattr(self.h, "5").mlp.c_fc.bias
    size_90 = h_5_ln_2.size(-1)
    view_70 = h_5_ln_2.view(-1, size_90);  h_5_ln_2 = size_90 = None
    h_5_mlp_c_fc_weight = getattr(self.h, "5").mlp.c_fc.weight
    addmm_22 = torch.addmm(h_5_mlp_c_fc_bias, view_70, h_5_mlp_c_fc_weight);  h_5_mlp_c_fc_bias = view_70 = h_5_mlp_c_fc_weight = None
    view_71 = addmm_22.view(add_70);  addmm_22 = add_70 = None
    mul_20 = 0.5 * view_71
    pow_12 = torch.pow(view_71, 3.0)
    mul_21 = 0.044715 * pow_12;  pow_12 = None
    add_71 = view_71 + mul_21;  view_71 = mul_21 = None
    mul_22 = 0.7978845608028654 * add_71;  add_71 = None
    tanh_5 = torch.tanh(mul_22);  mul_22 = None
    add_72 = 1.0 + tanh_5;  tanh_5 = None
    mul_23 = mul_20 * add_72;  mul_20 = add_72 = None
    size_91 = mul_23.size()
    getitem_75 = size_91[slice(None, -1, None)];  size_91 = None
    add_73 = getitem_75 + (768,);  getitem_75 = None
    h_5_mlp_c_proj_bias = getattr(self.h, "5").mlp.c_proj.bias
    size_92 = mul_23.size(-1)
    view_72 = mul_23.view(-1, size_92);  mul_23 = size_92 = None
    h_5_mlp_c_proj_weight = getattr(self.h, "5").mlp.c_proj.weight
    addmm_23 = torch.addmm(h_5_mlp_c_proj_bias, view_72, h_5_mlp_c_proj_weight);  h_5_mlp_c_proj_bias = view_72 = h_5_mlp_c_proj_weight = None
    view_73 = addmm_23.view(add_73);  addmm_23 = add_73 = None
    h_5_mlp_dropout = getattr(self.h, "5").mlp.dropout(view_73);  view_73 = None
    add_74 = add_69 + h_5_mlp_dropout;  add_69 = h_5_mlp_dropout = None
    h_6_ln_1 = getattr(self.h, "6").ln_1(add_74)
    size_93 = h_6_ln_1.size()
    getitem_76 = size_93[slice(None, -1, None)];  size_93 = None
    add_75 = getitem_76 + (2304,);  getitem_76 = None
    h_6_attn_c_attn_bias = getattr(self.h, "6").attn.c_attn.bias
    size_94 = h_6_ln_1.size(-1)
    view_74 = h_6_ln_1.view(-1, size_94);  h_6_ln_1 = size_94 = None
    h_6_attn_c_attn_weight = getattr(self.h, "6").attn.c_attn.weight
    addmm_24 = torch.addmm(h_6_attn_c_attn_bias, view_74, h_6_attn_c_attn_weight);  h_6_attn_c_attn_bias = view_74 = h_6_attn_c_attn_weight = None
    view_75 = addmm_24.view(add_75);  addmm_24 = add_75 = None
    split_6 = view_75.split(768, dim = 2);  view_75 = None
    getitem_77 = split_6[0]
    getitem_78 = split_6[1]
    getitem_79 = split_6[2];  split_6 = None
    size_95 = getitem_77.size()
    getitem_80 = size_95[slice(None, -1, None)];  size_95 = None
    add_76 = getitem_80 + (12, 64);  getitem_80 = None
    view_76 = getitem_77.view(add_76);  getitem_77 = add_76 = None
    permute_24 = view_76.permute(0, 2, 1, 3);  view_76 = None
    size_96 = getitem_78.size()
    getitem_81 = size_96[slice(None, -1, None)];  size_96 = None
    add_77 = getitem_81 + (12, 64);  getitem_81 = None
    view_77 = getitem_78.view(add_77);  getitem_78 = add_77 = None
    permute_25 = view_77.permute(0, 2, 1, 3);  view_77 = None
    size_97 = getitem_79.size()
    getitem_82 = size_97[slice(None, -1, None)];  size_97 = None
    add_78 = getitem_82 + (12, 64);  getitem_82 = None
    view_78 = getitem_79.view(add_78);  getitem_79 = add_78 = None
    permute_26 = view_78.permute(0, 2, 1, 3);  view_78 = None
    transpose_6 = permute_25.transpose(-1, -2)
    matmul_12 = torch.matmul(permute_24, transpose_6);  transpose_6 = None
    size_98 = permute_26.size(-1)
    pow_13 = size_98 ** 0.5;  size_98 = None
    getattr_50 = matmul_12.dtype
    getattr_51 = matmul_12.device
    full_12 = torch.full([], pow_13, dtype = getattr_50, device = getattr_51);  pow_13 = getattr_50 = getattr_51 = None
    truediv_6 = matmul_12 / full_12;  matmul_12 = full_12 = None
    size_99 = permute_24.size(-2);  permute_24 = None
    size_100 = permute_25.size(-2)
    h_6_attn_bias = getattr(self.h, "6").attn.bias
    sub_6 = size_100 - size_99;  size_99 = None
    getitem_83 = h_6_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_6, size_100, None), slice(None, size_100, None))];  h_6_attn_bias = sub_6 = size_100 = None
    getattr_52 = truediv_6.dtype
    finfo_6 = torch.finfo(getattr_52);  getattr_52 = None
    getattr_53 = finfo_6.min;  finfo_6 = None
    getattr_54 = truediv_6.dtype
    full_13 = torch.full([], getattr_53, dtype = getattr_54);  getattr_53 = getattr_54 = None
    getattr_55 = truediv_6.device
    to_12 = full_13.to(getattr_55);  full_13 = getattr_55 = None
    getattr_56 = truediv_6.dtype
    to_13 = truediv_6.to(getattr_56);  truediv_6 = getattr_56 = None
    where_6 = torch.where(getitem_83, to_13, to_12);  getitem_83 = to_13 = to_12 = None
    softmax_6 = torch.nn.functional.softmax(where_6, dim = -1, _stacklevel = 3, dtype = None);  where_6 = None
    getattr_57 = permute_26.dtype
    type_7 = softmax_6.type(getattr_57);  softmax_6 = getattr_57 = None
    h_6_attn_attn_dropout = getattr(self.h, "6").attn.attn_dropout(type_7);  type_7 = None
    matmul_13 = torch.matmul(h_6_attn_attn_dropout, permute_26);  h_6_attn_attn_dropout = None
    permute_27 = matmul_13.permute(0, 2, 1, 3);  matmul_13 = None
    contiguous_6 = permute_27.contiguous();  permute_27 = None
    size_101 = contiguous_6.size()
    getitem_84 = size_101[slice(None, -2, None)];  size_101 = None
    add_79 = getitem_84 + (768,);  getitem_84 = None
    view_79 = contiguous_6.view(add_79);  contiguous_6 = add_79 = None
    size_102 = view_79.size()
    getitem_85 = size_102[slice(None, -1, None)];  size_102 = None
    add_80 = getitem_85 + (768,);  getitem_85 = None
    h_6_attn_c_proj_bias = getattr(self.h, "6").attn.c_proj.bias
    size_103 = view_79.size(-1)
    view_80 = view_79.view(-1, size_103);  view_79 = size_103 = None
    h_6_attn_c_proj_weight = getattr(self.h, "6").attn.c_proj.weight
    addmm_25 = torch.addmm(h_6_attn_c_proj_bias, view_80, h_6_attn_c_proj_weight);  h_6_attn_c_proj_bias = view_80 = h_6_attn_c_proj_weight = None
    view_81 = addmm_25.view(add_80);  addmm_25 = add_80 = None
    h_6_attn_resid_dropout = getattr(self.h, "6").attn.resid_dropout(view_81);  view_81 = None
    add_81 = h_6_attn_resid_dropout + add_74;  h_6_attn_resid_dropout = add_74 = None
    h_6_ln_2 = getattr(self.h, "6").ln_2(add_81)
    size_104 = h_6_ln_2.size()
    getitem_86 = size_104[slice(None, -1, None)];  size_104 = None
    add_82 = getitem_86 + (3072,);  getitem_86 = None
    h_6_mlp_c_fc_bias = getattr(self.h, "6").mlp.c_fc.bias
    size_105 = h_6_ln_2.size(-1)
    view_82 = h_6_ln_2.view(-1, size_105);  h_6_ln_2 = size_105 = None
    h_6_mlp_c_fc_weight = getattr(self.h, "6").mlp.c_fc.weight
    addmm_26 = torch.addmm(h_6_mlp_c_fc_bias, view_82, h_6_mlp_c_fc_weight);  h_6_mlp_c_fc_bias = view_82 = h_6_mlp_c_fc_weight = None
    view_83 = addmm_26.view(add_82);  addmm_26 = add_82 = None
    mul_24 = 0.5 * view_83
    pow_14 = torch.pow(view_83, 3.0)
    mul_25 = 0.044715 * pow_14;  pow_14 = None
    add_83 = view_83 + mul_25;  view_83 = mul_25 = None
    mul_26 = 0.7978845608028654 * add_83;  add_83 = None
    tanh_6 = torch.tanh(mul_26);  mul_26 = None
    add_84 = 1.0 + tanh_6;  tanh_6 = None
    mul_27 = mul_24 * add_84;  mul_24 = add_84 = None
    size_106 = mul_27.size()
    getitem_87 = size_106[slice(None, -1, None)];  size_106 = None
    add_85 = getitem_87 + (768,);  getitem_87 = None
    h_6_mlp_c_proj_bias = getattr(self.h, "6").mlp.c_proj.bias
    size_107 = mul_27.size(-1)
    view_84 = mul_27.view(-1, size_107);  mul_27 = size_107 = None
    h_6_mlp_c_proj_weight = getattr(self.h, "6").mlp.c_proj.weight
    addmm_27 = torch.addmm(h_6_mlp_c_proj_bias, view_84, h_6_mlp_c_proj_weight);  h_6_mlp_c_proj_bias = view_84 = h_6_mlp_c_proj_weight = None
    view_85 = addmm_27.view(add_85);  addmm_27 = add_85 = None
    h_6_mlp_dropout = getattr(self.h, "6").mlp.dropout(view_85);  view_85 = None
    add_86 = add_81 + h_6_mlp_dropout;  add_81 = h_6_mlp_dropout = None
    h_7_ln_1 = getattr(self.h, "7").ln_1(add_86)
    size_108 = h_7_ln_1.size()
    getitem_88 = size_108[slice(None, -1, None)];  size_108 = None
    add_87 = getitem_88 + (2304,);  getitem_88 = None
    h_7_attn_c_attn_bias = getattr(self.h, "7").attn.c_attn.bias
    size_109 = h_7_ln_1.size(-1)
    view_86 = h_7_ln_1.view(-1, size_109);  h_7_ln_1 = size_109 = None
    h_7_attn_c_attn_weight = getattr(self.h, "7").attn.c_attn.weight
    addmm_28 = torch.addmm(h_7_attn_c_attn_bias, view_86, h_7_attn_c_attn_weight);  h_7_attn_c_attn_bias = view_86 = h_7_attn_c_attn_weight = None
    view_87 = addmm_28.view(add_87);  addmm_28 = add_87 = None
    split_7 = view_87.split(768, dim = 2);  view_87 = None
    getitem_89 = split_7[0]
    getitem_90 = split_7[1]
    getitem_91 = split_7[2];  split_7 = None
    size_110 = getitem_89.size()
    getitem_92 = size_110[slice(None, -1, None)];  size_110 = None
    add_88 = getitem_92 + (12, 64);  getitem_92 = None
    view_88 = getitem_89.view(add_88);  getitem_89 = add_88 = None
    permute_28 = view_88.permute(0, 2, 1, 3);  view_88 = None
    size_111 = getitem_90.size()
    getitem_93 = size_111[slice(None, -1, None)];  size_111 = None
    add_89 = getitem_93 + (12, 64);  getitem_93 = None
    view_89 = getitem_90.view(add_89);  getitem_90 = add_89 = None
    permute_29 = view_89.permute(0, 2, 1, 3);  view_89 = None
    size_112 = getitem_91.size()
    getitem_94 = size_112[slice(None, -1, None)];  size_112 = None
    add_90 = getitem_94 + (12, 64);  getitem_94 = None
    view_90 = getitem_91.view(add_90);  getitem_91 = add_90 = None
    permute_30 = view_90.permute(0, 2, 1, 3);  view_90 = None
    transpose_7 = permute_29.transpose(-1, -2)
    matmul_14 = torch.matmul(permute_28, transpose_7);  transpose_7 = None
    size_113 = permute_30.size(-1)
    pow_15 = size_113 ** 0.5;  size_113 = None
    getattr_58 = matmul_14.dtype
    getattr_59 = matmul_14.device
    full_14 = torch.full([], pow_15, dtype = getattr_58, device = getattr_59);  pow_15 = getattr_58 = getattr_59 = None
    truediv_7 = matmul_14 / full_14;  matmul_14 = full_14 = None
    size_114 = permute_28.size(-2);  permute_28 = None
    size_115 = permute_29.size(-2)
    h_7_attn_bias = getattr(self.h, "7").attn.bias
    sub_7 = size_115 - size_114;  size_114 = None
    getitem_95 = h_7_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_7, size_115, None), slice(None, size_115, None))];  h_7_attn_bias = sub_7 = size_115 = None
    getattr_60 = truediv_7.dtype
    finfo_7 = torch.finfo(getattr_60);  getattr_60 = None
    getattr_61 = finfo_7.min;  finfo_7 = None
    getattr_62 = truediv_7.dtype
    full_15 = torch.full([], getattr_61, dtype = getattr_62);  getattr_61 = getattr_62 = None
    getattr_63 = truediv_7.device
    to_14 = full_15.to(getattr_63);  full_15 = getattr_63 = None
    getattr_64 = truediv_7.dtype
    to_15 = truediv_7.to(getattr_64);  truediv_7 = getattr_64 = None
    where_7 = torch.where(getitem_95, to_15, to_14);  getitem_95 = to_15 = to_14 = None
    softmax_7 = torch.nn.functional.softmax(where_7, dim = -1, _stacklevel = 3, dtype = None);  where_7 = None
    getattr_65 = permute_30.dtype
    type_8 = softmax_7.type(getattr_65);  softmax_7 = getattr_65 = None
    h_7_attn_attn_dropout = getattr(self.h, "7").attn.attn_dropout(type_8);  type_8 = None
    matmul_15 = torch.matmul(h_7_attn_attn_dropout, permute_30);  h_7_attn_attn_dropout = None
    permute_31 = matmul_15.permute(0, 2, 1, 3);  matmul_15 = None
    contiguous_7 = permute_31.contiguous();  permute_31 = None
    size_116 = contiguous_7.size()
    getitem_96 = size_116[slice(None, -2, None)];  size_116 = None
    add_91 = getitem_96 + (768,);  getitem_96 = None
    view_91 = contiguous_7.view(add_91);  contiguous_7 = add_91 = None
    size_117 = view_91.size()
    getitem_97 = size_117[slice(None, -1, None)];  size_117 = None
    add_92 = getitem_97 + (768,);  getitem_97 = None
    h_7_attn_c_proj_bias = getattr(self.h, "7").attn.c_proj.bias
    size_118 = view_91.size(-1)
    view_92 = view_91.view(-1, size_118);  view_91 = size_118 = None
    h_7_attn_c_proj_weight = getattr(self.h, "7").attn.c_proj.weight
    addmm_29 = torch.addmm(h_7_attn_c_proj_bias, view_92, h_7_attn_c_proj_weight);  h_7_attn_c_proj_bias = view_92 = h_7_attn_c_proj_weight = None
    view_93 = addmm_29.view(add_92);  addmm_29 = add_92 = None
    h_7_attn_resid_dropout = getattr(self.h, "7").attn.resid_dropout(view_93);  view_93 = None
    add_93 = h_7_attn_resid_dropout + add_86;  h_7_attn_resid_dropout = add_86 = None
    h_7_ln_2 = getattr(self.h, "7").ln_2(add_93)
    size_119 = h_7_ln_2.size()
    getitem_98 = size_119[slice(None, -1, None)];  size_119 = None
    add_94 = getitem_98 + (3072,);  getitem_98 = None
    h_7_mlp_c_fc_bias = getattr(self.h, "7").mlp.c_fc.bias
    size_120 = h_7_ln_2.size(-1)
    view_94 = h_7_ln_2.view(-1, size_120);  h_7_ln_2 = size_120 = None
    h_7_mlp_c_fc_weight = getattr(self.h, "7").mlp.c_fc.weight
    addmm_30 = torch.addmm(h_7_mlp_c_fc_bias, view_94, h_7_mlp_c_fc_weight);  h_7_mlp_c_fc_bias = view_94 = h_7_mlp_c_fc_weight = None
    view_95 = addmm_30.view(add_94);  addmm_30 = add_94 = None
    mul_28 = 0.5 * view_95
    pow_16 = torch.pow(view_95, 3.0)
    mul_29 = 0.044715 * pow_16;  pow_16 = None
    add_95 = view_95 + mul_29;  view_95 = mul_29 = None
    mul_30 = 0.7978845608028654 * add_95;  add_95 = None
    tanh_7 = torch.tanh(mul_30);  mul_30 = None
    add_96 = 1.0 + tanh_7;  tanh_7 = None
    mul_31 = mul_28 * add_96;  mul_28 = add_96 = None
    size_121 = mul_31.size()
    getitem_99 = size_121[slice(None, -1, None)];  size_121 = None
    add_97 = getitem_99 + (768,);  getitem_99 = None
    h_7_mlp_c_proj_bias = getattr(self.h, "7").mlp.c_proj.bias
    size_122 = mul_31.size(-1)
    view_96 = mul_31.view(-1, size_122);  mul_31 = size_122 = None
    h_7_mlp_c_proj_weight = getattr(self.h, "7").mlp.c_proj.weight
    addmm_31 = torch.addmm(h_7_mlp_c_proj_bias, view_96, h_7_mlp_c_proj_weight);  h_7_mlp_c_proj_bias = view_96 = h_7_mlp_c_proj_weight = None
    view_97 = addmm_31.view(add_97);  addmm_31 = add_97 = None
    h_7_mlp_dropout = getattr(self.h, "7").mlp.dropout(view_97);  view_97 = None
    add_98 = add_93 + h_7_mlp_dropout;  add_93 = h_7_mlp_dropout = None
    h_8_ln_1 = getattr(self.h, "8").ln_1(add_98)
    size_123 = h_8_ln_1.size()
    getitem_100 = size_123[slice(None, -1, None)];  size_123 = None
    add_99 = getitem_100 + (2304,);  getitem_100 = None
    h_8_attn_c_attn_bias = getattr(self.h, "8").attn.c_attn.bias
    size_124 = h_8_ln_1.size(-1)
    view_98 = h_8_ln_1.view(-1, size_124);  h_8_ln_1 = size_124 = None
    h_8_attn_c_attn_weight = getattr(self.h, "8").attn.c_attn.weight
    addmm_32 = torch.addmm(h_8_attn_c_attn_bias, view_98, h_8_attn_c_attn_weight);  h_8_attn_c_attn_bias = view_98 = h_8_attn_c_attn_weight = None
    view_99 = addmm_32.view(add_99);  addmm_32 = add_99 = None
    split_8 = view_99.split(768, dim = 2);  view_99 = None
    getitem_101 = split_8[0]
    getitem_102 = split_8[1]
    getitem_103 = split_8[2];  split_8 = None
    size_125 = getitem_101.size()
    getitem_104 = size_125[slice(None, -1, None)];  size_125 = None
    add_100 = getitem_104 + (12, 64);  getitem_104 = None
    view_100 = getitem_101.view(add_100);  getitem_101 = add_100 = None
    permute_32 = view_100.permute(0, 2, 1, 3);  view_100 = None
    size_126 = getitem_102.size()
    getitem_105 = size_126[slice(None, -1, None)];  size_126 = None
    add_101 = getitem_105 + (12, 64);  getitem_105 = None
    view_101 = getitem_102.view(add_101);  getitem_102 = add_101 = None
    permute_33 = view_101.permute(0, 2, 1, 3);  view_101 = None
    size_127 = getitem_103.size()
    getitem_106 = size_127[slice(None, -1, None)];  size_127 = None
    add_102 = getitem_106 + (12, 64);  getitem_106 = None
    view_102 = getitem_103.view(add_102);  getitem_103 = add_102 = None
    permute_34 = view_102.permute(0, 2, 1, 3);  view_102 = None
    transpose_8 = permute_33.transpose(-1, -2)
    matmul_16 = torch.matmul(permute_32, transpose_8);  transpose_8 = None
    size_128 = permute_34.size(-1)
    pow_17 = size_128 ** 0.5;  size_128 = None
    getattr_66 = matmul_16.dtype
    getattr_67 = matmul_16.device
    full_16 = torch.full([], pow_17, dtype = getattr_66, device = getattr_67);  pow_17 = getattr_66 = getattr_67 = None
    truediv_8 = matmul_16 / full_16;  matmul_16 = full_16 = None
    size_129 = permute_32.size(-2);  permute_32 = None
    size_130 = permute_33.size(-2)
    h_8_attn_bias = getattr(self.h, "8").attn.bias
    sub_8 = size_130 - size_129;  size_129 = None
    getitem_107 = h_8_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_8, size_130, None), slice(None, size_130, None))];  h_8_attn_bias = sub_8 = size_130 = None
    getattr_68 = truediv_8.dtype
    finfo_8 = torch.finfo(getattr_68);  getattr_68 = None
    getattr_69 = finfo_8.min;  finfo_8 = None
    getattr_70 = truediv_8.dtype
    full_17 = torch.full([], getattr_69, dtype = getattr_70);  getattr_69 = getattr_70 = None
    getattr_71 = truediv_8.device
    to_16 = full_17.to(getattr_71);  full_17 = getattr_71 = None
    getattr_72 = truediv_8.dtype
    to_17 = truediv_8.to(getattr_72);  truediv_8 = getattr_72 = None
    where_8 = torch.where(getitem_107, to_17, to_16);  getitem_107 = to_17 = to_16 = None
    softmax_8 = torch.nn.functional.softmax(where_8, dim = -1, _stacklevel = 3, dtype = None);  where_8 = None
    getattr_73 = permute_34.dtype
    type_9 = softmax_8.type(getattr_73);  softmax_8 = getattr_73 = None
    h_8_attn_attn_dropout = getattr(self.h, "8").attn.attn_dropout(type_9);  type_9 = None
    matmul_17 = torch.matmul(h_8_attn_attn_dropout, permute_34);  h_8_attn_attn_dropout = None
    permute_35 = matmul_17.permute(0, 2, 1, 3);  matmul_17 = None
    contiguous_8 = permute_35.contiguous();  permute_35 = None
    size_131 = contiguous_8.size()
    getitem_108 = size_131[slice(None, -2, None)];  size_131 = None
    add_103 = getitem_108 + (768,);  getitem_108 = None
    view_103 = contiguous_8.view(add_103);  contiguous_8 = add_103 = None
    size_132 = view_103.size()
    getitem_109 = size_132[slice(None, -1, None)];  size_132 = None
    add_104 = getitem_109 + (768,);  getitem_109 = None
    h_8_attn_c_proj_bias = getattr(self.h, "8").attn.c_proj.bias
    size_133 = view_103.size(-1)
    view_104 = view_103.view(-1, size_133);  view_103 = size_133 = None
    h_8_attn_c_proj_weight = getattr(self.h, "8").attn.c_proj.weight
    addmm_33 = torch.addmm(h_8_attn_c_proj_bias, view_104, h_8_attn_c_proj_weight);  h_8_attn_c_proj_bias = view_104 = h_8_attn_c_proj_weight = None
    view_105 = addmm_33.view(add_104);  addmm_33 = add_104 = None
    h_8_attn_resid_dropout = getattr(self.h, "8").attn.resid_dropout(view_105);  view_105 = None
    add_105 = h_8_attn_resid_dropout + add_98;  h_8_attn_resid_dropout = add_98 = None
    h_8_ln_2 = getattr(self.h, "8").ln_2(add_105)
    size_134 = h_8_ln_2.size()
    getitem_110 = size_134[slice(None, -1, None)];  size_134 = None
    add_106 = getitem_110 + (3072,);  getitem_110 = None
    h_8_mlp_c_fc_bias = getattr(self.h, "8").mlp.c_fc.bias
    size_135 = h_8_ln_2.size(-1)
    view_106 = h_8_ln_2.view(-1, size_135);  h_8_ln_2 = size_135 = None
    h_8_mlp_c_fc_weight = getattr(self.h, "8").mlp.c_fc.weight
    addmm_34 = torch.addmm(h_8_mlp_c_fc_bias, view_106, h_8_mlp_c_fc_weight);  h_8_mlp_c_fc_bias = view_106 = h_8_mlp_c_fc_weight = None
    view_107 = addmm_34.view(add_106);  addmm_34 = add_106 = None
    mul_32 = 0.5 * view_107
    pow_18 = torch.pow(view_107, 3.0)
    mul_33 = 0.044715 * pow_18;  pow_18 = None
    add_107 = view_107 + mul_33;  view_107 = mul_33 = None
    mul_34 = 0.7978845608028654 * add_107;  add_107 = None
    tanh_8 = torch.tanh(mul_34);  mul_34 = None
    add_108 = 1.0 + tanh_8;  tanh_8 = None
    mul_35 = mul_32 * add_108;  mul_32 = add_108 = None
    size_136 = mul_35.size()
    getitem_111 = size_136[slice(None, -1, None)];  size_136 = None
    add_109 = getitem_111 + (768,);  getitem_111 = None
    h_8_mlp_c_proj_bias = getattr(self.h, "8").mlp.c_proj.bias
    size_137 = mul_35.size(-1)
    view_108 = mul_35.view(-1, size_137);  mul_35 = size_137 = None
    h_8_mlp_c_proj_weight = getattr(self.h, "8").mlp.c_proj.weight
    addmm_35 = torch.addmm(h_8_mlp_c_proj_bias, view_108, h_8_mlp_c_proj_weight);  h_8_mlp_c_proj_bias = view_108 = h_8_mlp_c_proj_weight = None
    view_109 = addmm_35.view(add_109);  addmm_35 = add_109 = None
    h_8_mlp_dropout = getattr(self.h, "8").mlp.dropout(view_109);  view_109 = None
    add_110 = add_105 + h_8_mlp_dropout;  add_105 = h_8_mlp_dropout = None
    h_9_ln_1 = getattr(self.h, "9").ln_1(add_110)
    size_138 = h_9_ln_1.size()
    getitem_112 = size_138[slice(None, -1, None)];  size_138 = None
    add_111 = getitem_112 + (2304,);  getitem_112 = None
    h_9_attn_c_attn_bias = getattr(self.h, "9").attn.c_attn.bias
    size_139 = h_9_ln_1.size(-1)
    view_110 = h_9_ln_1.view(-1, size_139);  h_9_ln_1 = size_139 = None
    h_9_attn_c_attn_weight = getattr(self.h, "9").attn.c_attn.weight
    addmm_36 = torch.addmm(h_9_attn_c_attn_bias, view_110, h_9_attn_c_attn_weight);  h_9_attn_c_attn_bias = view_110 = h_9_attn_c_attn_weight = None
    view_111 = addmm_36.view(add_111);  addmm_36 = add_111 = None
    split_9 = view_111.split(768, dim = 2);  view_111 = None
    getitem_113 = split_9[0]
    getitem_114 = split_9[1]
    getitem_115 = split_9[2];  split_9 = None
    size_140 = getitem_113.size()
    getitem_116 = size_140[slice(None, -1, None)];  size_140 = None
    add_112 = getitem_116 + (12, 64);  getitem_116 = None
    view_112 = getitem_113.view(add_112);  getitem_113 = add_112 = None
    permute_36 = view_112.permute(0, 2, 1, 3);  view_112 = None
    size_141 = getitem_114.size()
    getitem_117 = size_141[slice(None, -1, None)];  size_141 = None
    add_113 = getitem_117 + (12, 64);  getitem_117 = None
    view_113 = getitem_114.view(add_113);  getitem_114 = add_113 = None
    permute_37 = view_113.permute(0, 2, 1, 3);  view_113 = None
    size_142 = getitem_115.size()
    getitem_118 = size_142[slice(None, -1, None)];  size_142 = None
    add_114 = getitem_118 + (12, 64);  getitem_118 = None
    view_114 = getitem_115.view(add_114);  getitem_115 = add_114 = None
    permute_38 = view_114.permute(0, 2, 1, 3);  view_114 = None
    transpose_9 = permute_37.transpose(-1, -2)
    matmul_18 = torch.matmul(permute_36, transpose_9);  transpose_9 = None
    size_143 = permute_38.size(-1)
    pow_19 = size_143 ** 0.5;  size_143 = None
    getattr_74 = matmul_18.dtype
    getattr_75 = matmul_18.device
    full_18 = torch.full([], pow_19, dtype = getattr_74, device = getattr_75);  pow_19 = getattr_74 = getattr_75 = None
    truediv_9 = matmul_18 / full_18;  matmul_18 = full_18 = None
    size_144 = permute_36.size(-2);  permute_36 = None
    size_145 = permute_37.size(-2)
    h_9_attn_bias = getattr(self.h, "9").attn.bias
    sub_9 = size_145 - size_144;  size_144 = None
    getitem_119 = h_9_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_9, size_145, None), slice(None, size_145, None))];  h_9_attn_bias = sub_9 = size_145 = None
    getattr_76 = truediv_9.dtype
    finfo_9 = torch.finfo(getattr_76);  getattr_76 = None
    getattr_77 = finfo_9.min;  finfo_9 = None
    getattr_78 = truediv_9.dtype
    full_19 = torch.full([], getattr_77, dtype = getattr_78);  getattr_77 = getattr_78 = None
    getattr_79 = truediv_9.device
    to_18 = full_19.to(getattr_79);  full_19 = getattr_79 = None
    getattr_80 = truediv_9.dtype
    to_19 = truediv_9.to(getattr_80);  truediv_9 = getattr_80 = None
    where_9 = torch.where(getitem_119, to_19, to_18);  getitem_119 = to_19 = to_18 = None
    softmax_9 = torch.nn.functional.softmax(where_9, dim = -1, _stacklevel = 3, dtype = None);  where_9 = None
    getattr_81 = permute_38.dtype
    type_10 = softmax_9.type(getattr_81);  softmax_9 = getattr_81 = None
    h_9_attn_attn_dropout = getattr(self.h, "9").attn.attn_dropout(type_10);  type_10 = None
    matmul_19 = torch.matmul(h_9_attn_attn_dropout, permute_38);  h_9_attn_attn_dropout = None
    permute_39 = matmul_19.permute(0, 2, 1, 3);  matmul_19 = None
    contiguous_9 = permute_39.contiguous();  permute_39 = None
    size_146 = contiguous_9.size()
    getitem_120 = size_146[slice(None, -2, None)];  size_146 = None
    add_115 = getitem_120 + (768,);  getitem_120 = None
    view_115 = contiguous_9.view(add_115);  contiguous_9 = add_115 = None
    size_147 = view_115.size()
    getitem_121 = size_147[slice(None, -1, None)];  size_147 = None
    add_116 = getitem_121 + (768,);  getitem_121 = None
    h_9_attn_c_proj_bias = getattr(self.h, "9").attn.c_proj.bias
    size_148 = view_115.size(-1)
    view_116 = view_115.view(-1, size_148);  view_115 = size_148 = None
    h_9_attn_c_proj_weight = getattr(self.h, "9").attn.c_proj.weight
    addmm_37 = torch.addmm(h_9_attn_c_proj_bias, view_116, h_9_attn_c_proj_weight);  h_9_attn_c_proj_bias = view_116 = h_9_attn_c_proj_weight = None
    view_117 = addmm_37.view(add_116);  addmm_37 = add_116 = None
    h_9_attn_resid_dropout = getattr(self.h, "9").attn.resid_dropout(view_117);  view_117 = None
    add_117 = h_9_attn_resid_dropout + add_110;  h_9_attn_resid_dropout = add_110 = None
    h_9_ln_2 = getattr(self.h, "9").ln_2(add_117)
    size_149 = h_9_ln_2.size()
    getitem_122 = size_149[slice(None, -1, None)];  size_149 = None
    add_118 = getitem_122 + (3072,);  getitem_122 = None
    h_9_mlp_c_fc_bias = getattr(self.h, "9").mlp.c_fc.bias
    size_150 = h_9_ln_2.size(-1)
    view_118 = h_9_ln_2.view(-1, size_150);  h_9_ln_2 = size_150 = None
    h_9_mlp_c_fc_weight = getattr(self.h, "9").mlp.c_fc.weight
    addmm_38 = torch.addmm(h_9_mlp_c_fc_bias, view_118, h_9_mlp_c_fc_weight);  h_9_mlp_c_fc_bias = view_118 = h_9_mlp_c_fc_weight = None
    view_119 = addmm_38.view(add_118);  addmm_38 = add_118 = None
    mul_36 = 0.5 * view_119
    pow_20 = torch.pow(view_119, 3.0)
    mul_37 = 0.044715 * pow_20;  pow_20 = None
    add_119 = view_119 + mul_37;  view_119 = mul_37 = None
    mul_38 = 0.7978845608028654 * add_119;  add_119 = None
    tanh_9 = torch.tanh(mul_38);  mul_38 = None
    add_120 = 1.0 + tanh_9;  tanh_9 = None
    mul_39 = mul_36 * add_120;  mul_36 = add_120 = None
    size_151 = mul_39.size()
    getitem_123 = size_151[slice(None, -1, None)];  size_151 = None
    add_121 = getitem_123 + (768,);  getitem_123 = None
    h_9_mlp_c_proj_bias = getattr(self.h, "9").mlp.c_proj.bias
    size_152 = mul_39.size(-1)
    view_120 = mul_39.view(-1, size_152);  mul_39 = size_152 = None
    h_9_mlp_c_proj_weight = getattr(self.h, "9").mlp.c_proj.weight
    addmm_39 = torch.addmm(h_9_mlp_c_proj_bias, view_120, h_9_mlp_c_proj_weight);  h_9_mlp_c_proj_bias = view_120 = h_9_mlp_c_proj_weight = None
    view_121 = addmm_39.view(add_121);  addmm_39 = add_121 = None
    h_9_mlp_dropout = getattr(self.h, "9").mlp.dropout(view_121);  view_121 = None
    add_122 = add_117 + h_9_mlp_dropout;  add_117 = h_9_mlp_dropout = None
    h_10_ln_1 = getattr(self.h, "10").ln_1(add_122)
    size_153 = h_10_ln_1.size()
    getitem_124 = size_153[slice(None, -1, None)];  size_153 = None
    add_123 = getitem_124 + (2304,);  getitem_124 = None
    h_10_attn_c_attn_bias = getattr(self.h, "10").attn.c_attn.bias
    size_154 = h_10_ln_1.size(-1)
    view_122 = h_10_ln_1.view(-1, size_154);  h_10_ln_1 = size_154 = None
    h_10_attn_c_attn_weight = getattr(self.h, "10").attn.c_attn.weight
    addmm_40 = torch.addmm(h_10_attn_c_attn_bias, view_122, h_10_attn_c_attn_weight);  h_10_attn_c_attn_bias = view_122 = h_10_attn_c_attn_weight = None
    view_123 = addmm_40.view(add_123);  addmm_40 = add_123 = None
    split_10 = view_123.split(768, dim = 2);  view_123 = None
    getitem_125 = split_10[0]
    getitem_126 = split_10[1]
    getitem_127 = split_10[2];  split_10 = None
    size_155 = getitem_125.size()
    getitem_128 = size_155[slice(None, -1, None)];  size_155 = None
    add_124 = getitem_128 + (12, 64);  getitem_128 = None
    view_124 = getitem_125.view(add_124);  getitem_125 = add_124 = None
    permute_40 = view_124.permute(0, 2, 1, 3);  view_124 = None
    size_156 = getitem_126.size()
    getitem_129 = size_156[slice(None, -1, None)];  size_156 = None
    add_125 = getitem_129 + (12, 64);  getitem_129 = None
    view_125 = getitem_126.view(add_125);  getitem_126 = add_125 = None
    permute_41 = view_125.permute(0, 2, 1, 3);  view_125 = None
    size_157 = getitem_127.size()
    getitem_130 = size_157[slice(None, -1, None)];  size_157 = None
    add_126 = getitem_130 + (12, 64);  getitem_130 = None
    view_126 = getitem_127.view(add_126);  getitem_127 = add_126 = None
    permute_42 = view_126.permute(0, 2, 1, 3);  view_126 = None
    transpose_10 = permute_41.transpose(-1, -2)
    matmul_20 = torch.matmul(permute_40, transpose_10);  transpose_10 = None
    size_158 = permute_42.size(-1)
    pow_21 = size_158 ** 0.5;  size_158 = None
    getattr_82 = matmul_20.dtype
    getattr_83 = matmul_20.device
    full_20 = torch.full([], pow_21, dtype = getattr_82, device = getattr_83);  pow_21 = getattr_82 = getattr_83 = None
    truediv_10 = matmul_20 / full_20;  matmul_20 = full_20 = None
    size_159 = permute_40.size(-2);  permute_40 = None
    size_160 = permute_41.size(-2)
    h_10_attn_bias = getattr(self.h, "10").attn.bias
    sub_10 = size_160 - size_159;  size_159 = None
    getitem_131 = h_10_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_10, size_160, None), slice(None, size_160, None))];  h_10_attn_bias = sub_10 = size_160 = None
    getattr_84 = truediv_10.dtype
    finfo_10 = torch.finfo(getattr_84);  getattr_84 = None
    getattr_85 = finfo_10.min;  finfo_10 = None
    getattr_86 = truediv_10.dtype
    full_21 = torch.full([], getattr_85, dtype = getattr_86);  getattr_85 = getattr_86 = None
    getattr_87 = truediv_10.device
    to_20 = full_21.to(getattr_87);  full_21 = getattr_87 = None
    getattr_88 = truediv_10.dtype
    to_21 = truediv_10.to(getattr_88);  truediv_10 = getattr_88 = None
    where_10 = torch.where(getitem_131, to_21, to_20);  getitem_131 = to_21 = to_20 = None
    softmax_10 = torch.nn.functional.softmax(where_10, dim = -1, _stacklevel = 3, dtype = None);  where_10 = None
    getattr_89 = permute_42.dtype
    type_11 = softmax_10.type(getattr_89);  softmax_10 = getattr_89 = None
    h_10_attn_attn_dropout = getattr(self.h, "10").attn.attn_dropout(type_11);  type_11 = None
    matmul_21 = torch.matmul(h_10_attn_attn_dropout, permute_42);  h_10_attn_attn_dropout = None
    permute_43 = matmul_21.permute(0, 2, 1, 3);  matmul_21 = None
    contiguous_10 = permute_43.contiguous();  permute_43 = None
    size_161 = contiguous_10.size()
    getitem_132 = size_161[slice(None, -2, None)];  size_161 = None
    add_127 = getitem_132 + (768,);  getitem_132 = None
    view_127 = contiguous_10.view(add_127);  contiguous_10 = add_127 = None
    size_162 = view_127.size()
    getitem_133 = size_162[slice(None, -1, None)];  size_162 = None
    add_128 = getitem_133 + (768,);  getitem_133 = None
    h_10_attn_c_proj_bias = getattr(self.h, "10").attn.c_proj.bias
    size_163 = view_127.size(-1)
    view_128 = view_127.view(-1, size_163);  view_127 = size_163 = None
    h_10_attn_c_proj_weight = getattr(self.h, "10").attn.c_proj.weight
    addmm_41 = torch.addmm(h_10_attn_c_proj_bias, view_128, h_10_attn_c_proj_weight);  h_10_attn_c_proj_bias = view_128 = h_10_attn_c_proj_weight = None
    view_129 = addmm_41.view(add_128);  addmm_41 = add_128 = None
    h_10_attn_resid_dropout = getattr(self.h, "10").attn.resid_dropout(view_129);  view_129 = None
    add_129 = h_10_attn_resid_dropout + add_122;  h_10_attn_resid_dropout = add_122 = None
    h_10_ln_2 = getattr(self.h, "10").ln_2(add_129)
    size_164 = h_10_ln_2.size()
    getitem_134 = size_164[slice(None, -1, None)];  size_164 = None
    add_130 = getitem_134 + (3072,);  getitem_134 = None
    h_10_mlp_c_fc_bias = getattr(self.h, "10").mlp.c_fc.bias
    size_165 = h_10_ln_2.size(-1)
    view_130 = h_10_ln_2.view(-1, size_165);  h_10_ln_2 = size_165 = None
    h_10_mlp_c_fc_weight = getattr(self.h, "10").mlp.c_fc.weight
    addmm_42 = torch.addmm(h_10_mlp_c_fc_bias, view_130, h_10_mlp_c_fc_weight);  h_10_mlp_c_fc_bias = view_130 = h_10_mlp_c_fc_weight = None
    view_131 = addmm_42.view(add_130);  addmm_42 = add_130 = None
    mul_40 = 0.5 * view_131
    pow_22 = torch.pow(view_131, 3.0)
    mul_41 = 0.044715 * pow_22;  pow_22 = None
    add_131 = view_131 + mul_41;  view_131 = mul_41 = None
    mul_42 = 0.7978845608028654 * add_131;  add_131 = None
    tanh_10 = torch.tanh(mul_42);  mul_42 = None
    add_132 = 1.0 + tanh_10;  tanh_10 = None
    mul_43 = mul_40 * add_132;  mul_40 = add_132 = None
    size_166 = mul_43.size()
    getitem_135 = size_166[slice(None, -1, None)];  size_166 = None
    add_133 = getitem_135 + (768,);  getitem_135 = None
    h_10_mlp_c_proj_bias = getattr(self.h, "10").mlp.c_proj.bias
    size_167 = mul_43.size(-1)
    view_132 = mul_43.view(-1, size_167);  mul_43 = size_167 = None
    h_10_mlp_c_proj_weight = getattr(self.h, "10").mlp.c_proj.weight
    addmm_43 = torch.addmm(h_10_mlp_c_proj_bias, view_132, h_10_mlp_c_proj_weight);  h_10_mlp_c_proj_bias = view_132 = h_10_mlp_c_proj_weight = None
    view_133 = addmm_43.view(add_133);  addmm_43 = add_133 = None
    h_10_mlp_dropout = getattr(self.h, "10").mlp.dropout(view_133);  view_133 = None
    add_134 = add_129 + h_10_mlp_dropout;  add_129 = h_10_mlp_dropout = None
    h_11_ln_1 = getattr(self.h, "11").ln_1(add_134)
    size_168 = h_11_ln_1.size()
    getitem_136 = size_168[slice(None, -1, None)];  size_168 = None
    add_135 = getitem_136 + (2304,);  getitem_136 = None
    h_11_attn_c_attn_bias = getattr(self.h, "11").attn.c_attn.bias
    size_169 = h_11_ln_1.size(-1)
    view_134 = h_11_ln_1.view(-1, size_169);  h_11_ln_1 = size_169 = None
    h_11_attn_c_attn_weight = getattr(self.h, "11").attn.c_attn.weight
    addmm_44 = torch.addmm(h_11_attn_c_attn_bias, view_134, h_11_attn_c_attn_weight);  h_11_attn_c_attn_bias = view_134 = h_11_attn_c_attn_weight = None
    view_135 = addmm_44.view(add_135);  addmm_44 = add_135 = None
    split_11 = view_135.split(768, dim = 2);  view_135 = None
    getitem_137 = split_11[0]
    getitem_138 = split_11[1]
    getitem_139 = split_11[2];  split_11 = None
    size_170 = getitem_137.size()
    getitem_140 = size_170[slice(None, -1, None)];  size_170 = None
    add_136 = getitem_140 + (12, 64);  getitem_140 = None
    view_136 = getitem_137.view(add_136);  getitem_137 = add_136 = None
    permute_44 = view_136.permute(0, 2, 1, 3);  view_136 = None
    size_171 = getitem_138.size()
    getitem_141 = size_171[slice(None, -1, None)];  size_171 = None
    add_137 = getitem_141 + (12, 64);  getitem_141 = None
    view_137 = getitem_138.view(add_137);  getitem_138 = add_137 = None
    permute_45 = view_137.permute(0, 2, 1, 3);  view_137 = None
    size_172 = getitem_139.size()
    getitem_142 = size_172[slice(None, -1, None)];  size_172 = None
    add_138 = getitem_142 + (12, 64);  getitem_142 = None
    view_138 = getitem_139.view(add_138);  getitem_139 = add_138 = None
    permute_46 = view_138.permute(0, 2, 1, 3);  view_138 = None
    transpose_11 = permute_45.transpose(-1, -2)
    matmul_22 = torch.matmul(permute_44, transpose_11);  transpose_11 = None
    size_173 = permute_46.size(-1)
    pow_23 = size_173 ** 0.5;  size_173 = None
    getattr_90 = matmul_22.dtype
    getattr_91 = matmul_22.device
    full_22 = torch.full([], pow_23, dtype = getattr_90, device = getattr_91);  pow_23 = getattr_90 = getattr_91 = None
    truediv_11 = matmul_22 / full_22;  matmul_22 = full_22 = None
    size_174 = permute_44.size(-2);  permute_44 = None
    size_175 = permute_45.size(-2)
    h_11_attn_bias = getattr(self.h, "11").attn.bias
    sub_11 = size_175 - size_174;  size_174 = None
    getitem_143 = h_11_attn_bias[(slice(None, None, None), slice(None, None, None), slice(sub_11, size_175, None), slice(None, size_175, None))];  h_11_attn_bias = sub_11 = size_175 = None
    getattr_92 = truediv_11.dtype
    finfo_11 = torch.finfo(getattr_92);  getattr_92 = None
    getattr_93 = finfo_11.min;  finfo_11 = None
    getattr_94 = truediv_11.dtype
    full_23 = torch.full([], getattr_93, dtype = getattr_94);  getattr_93 = getattr_94 = None
    getattr_95 = truediv_11.device
    to_22 = full_23.to(getattr_95);  full_23 = getattr_95 = None
    getattr_96 = truediv_11.dtype
    to_23 = truediv_11.to(getattr_96);  truediv_11 = getattr_96 = None
    where_11 = torch.where(getitem_143, to_23, to_22);  getitem_143 = to_23 = to_22 = None
    softmax_11 = torch.nn.functional.softmax(where_11, dim = -1, _stacklevel = 3, dtype = None);  where_11 = None
    getattr_97 = permute_46.dtype
    type_12 = softmax_11.type(getattr_97);  softmax_11 = getattr_97 = None
    h_11_attn_attn_dropout = getattr(self.h, "11").attn.attn_dropout(type_12);  type_12 = None
    matmul_23 = torch.matmul(h_11_attn_attn_dropout, permute_46);  h_11_attn_attn_dropout = None
    permute_47 = matmul_23.permute(0, 2, 1, 3);  matmul_23 = None
    contiguous_11 = permute_47.contiguous();  permute_47 = None
    size_176 = contiguous_11.size()
    getitem_144 = size_176[slice(None, -2, None)];  size_176 = None
    add_139 = getitem_144 + (768,);  getitem_144 = None
    view_139 = contiguous_11.view(add_139);  contiguous_11 = add_139 = None
    size_177 = view_139.size()
    getitem_145 = size_177[slice(None, -1, None)];  size_177 = None
    add_140 = getitem_145 + (768,);  getitem_145 = None
    h_11_attn_c_proj_bias = getattr(self.h, "11").attn.c_proj.bias
    size_178 = view_139.size(-1)
    view_140 = view_139.view(-1, size_178);  view_139 = size_178 = None
    h_11_attn_c_proj_weight = getattr(self.h, "11").attn.c_proj.weight
    addmm_45 = torch.addmm(h_11_attn_c_proj_bias, view_140, h_11_attn_c_proj_weight);  h_11_attn_c_proj_bias = view_140 = h_11_attn_c_proj_weight = None
    view_141 = addmm_45.view(add_140);  addmm_45 = add_140 = None
    h_11_attn_resid_dropout = getattr(self.h, "11").attn.resid_dropout(view_141);  view_141 = None
    add_141 = h_11_attn_resid_dropout + add_134;  h_11_attn_resid_dropout = add_134 = None
    h_11_ln_2 = getattr(self.h, "11").ln_2(add_141)
    size_179 = h_11_ln_2.size()
    getitem_146 = size_179[slice(None, -1, None)];  size_179 = None
    add_142 = getitem_146 + (3072,);  getitem_146 = None
    h_11_mlp_c_fc_bias = getattr(self.h, "11").mlp.c_fc.bias
    size_180 = h_11_ln_2.size(-1)
    view_142 = h_11_ln_2.view(-1, size_180);  h_11_ln_2 = size_180 = None
    h_11_mlp_c_fc_weight = getattr(self.h, "11").mlp.c_fc.weight
    addmm_46 = torch.addmm(h_11_mlp_c_fc_bias, view_142, h_11_mlp_c_fc_weight);  h_11_mlp_c_fc_bias = view_142 = h_11_mlp_c_fc_weight = None
    view_143 = addmm_46.view(add_142);  addmm_46 = add_142 = None
    mul_44 = 0.5 * view_143
    pow_24 = torch.pow(view_143, 3.0)
    mul_45 = 0.044715 * pow_24;  pow_24 = None
    add_143 = view_143 + mul_45;  view_143 = mul_45 = None
    mul_46 = 0.7978845608028654 * add_143;  add_143 = None
    tanh_11 = torch.tanh(mul_46);  mul_46 = None
    add_144 = 1.0 + tanh_11;  tanh_11 = None
    mul_47 = mul_44 * add_144;  mul_44 = add_144 = None
    size_181 = mul_47.size()
    getitem_147 = size_181[slice(None, -1, None)];  size_181 = None
    add_145 = getitem_147 + (768,);  getitem_147 = None
    h_11_mlp_c_proj_bias = getattr(self.h, "11").mlp.c_proj.bias
    size_182 = mul_47.size(-1)
    view_144 = mul_47.view(-1, size_182);  mul_47 = size_182 = None
    h_11_mlp_c_proj_weight = getattr(self.h, "11").mlp.c_proj.weight
    addmm_47 = torch.addmm(h_11_mlp_c_proj_bias, view_144, h_11_mlp_c_proj_weight);  h_11_mlp_c_proj_bias = view_144 = h_11_mlp_c_proj_weight = None
    view_145 = addmm_47.view(add_145);  addmm_47 = add_145 = None
    h_11_mlp_dropout = getattr(self.h, "11").mlp.dropout(view_145);  view_145 = None
    add_146 = add_141 + h_11_mlp_dropout;  add_141 = h_11_mlp_dropout = None
    ln_f = self.ln_f(add_146);  add_146 = None
    view_146 = ln_f.view(add_2);  ln_f = add_2 = None
    return {'last_hidden_state': view_146, 'past_key_values': ((permute_1, permute_2), (permute_5, permute_6), (permute_9, permute_10), (permute_13, permute_14), (permute_17, permute_18), (permute_21, permute_22), (permute_25, permute_26), (permute_29, permute_30), (permute_33, permute_34), (permute_37, permute_38), (permute_41, permute_42), (permute_45, permute_46))}